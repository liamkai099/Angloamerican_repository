from flask import Flask, render_template, request, redirect
app = Flask(__name__)  

@app.route('/')         
def index():
    return render_template("index.html")

@app.route('/checkout', methods=['POST'])         
def checkout():
    print(request.form)
    return render_template("checkout.html")

@app.route('/frutas')         
def fruits():
    return render_template("frutas.html")

if __name__=="__main__":   
    app.run(debug=True)                                                                                                                                                                                                                <html> 
<head> 
    <title>Mercado de Frutas</title>
    <link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='css/bootstrap.css') }}">
</head>
<body>

    <header>
        <div class="navbar navbar-dark bg-dark box-shadow">
          <div class="container d-flex justify-content-between">
            <a href="#" class="navbar-brand d-flex align-items-center">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2"><path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path><circle cx="12" cy="13" r="4"></circle></svg>
              <strong>Mercado</strong>
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarHeader" aria-controls="navbarHeader" aria-expanded="false" aria-label="Toggle navigation">
              <span class="navbar-toggler-icon"></span>
            </button>
          </div>
        </div>
      </header>
  
      <main role="main">
  
        <section class="jumbotron text-center">
          <div class="container">
            <h1 class="jumbotron-heading">Mercado de Frutas</h1>
            <p>
              Practica colocando imágenes estáticas en este espacio.
            </p>

            <p>
              <a href="/" class="btn btn-primary my-2">Regresar</a>
            </p>
          </div>
        </section>
  
      </main>
      
</body>
</html>    Muestra las imágenes proporcionadas en la página frutas.html   apple.png, blackberry.png, raspbery.png y strawbery.png
ChatGPT Plus
ChatGPT
Para mostrar las imágenes proporcionadas en la página frutas.html, puedes colocarlas en una carpeta llamada static dentro de tu proyecto Flask, específicamente en static/images. Luego, las referencias desde el HTML se hacen utilizando la función url_for para acceder a las imágenes de forma correcta.

Aquí tienes cómo se organizaría tu proyecto y el código actualizado para frutas.html.

Estructura del proyecto
plaintext
Copiar código
/tu_proyecto
|-- app.py
|-- templates/
|   |-- index.html
|   |-- checkout.html
|   |-- frutas.html
|-- static/
    |-- css/
    |   |-- bootstrap.css
    |-- images/
        |-- apple.png
        |-- blackberry.png
        |-- raspbery.png
        |-- strawbery.png
Código para frutas.html
html
Copiar código
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mercado de Frutas</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/bootstrap.css') }}">
</head>
<body>
    <header>
        <div class="navbar navbar-dark bg-dark box-shadow">
            <div class="container d-flex justify-content-between">
                <a href="#" class="navbar-brand d-flex align-items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2">
                        <path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path>
                        <circle cx="12" cy="13" r="4"></circle>
                    </svg>
                    <strong>Mercado</strong>
                </a>
            </div>
        </div>
    </header>

    <main role="main">
        <section class="jumbotron text-center">
            <div class="container">
                <h1 class="jumbotron-heading">Mercado de Frutas</h1>
                <p class="lead">Aquí encontrarás imágenes de deliciosas frutas.</p>
                <div class="row mt-4">
                    <div class="col-md-3">
                        <img src="{{ url_for('static', filename='images/apple.png') }}" alt="Manzana" class="img-fluid rounded">
                        <h5 class="mt-2">Manzana</h5>
                    </div>
                    <div class="col-md-3">
                        <img src="{{ url_for('static', filename='images/blackberry.png') }}" alt="Mora" class="img-fluid rounded">
                        <h5 class="mt-2">Mora</h5>
                    </div>
                    <div class="col-md-3">
                        <img src="{{ url_for('static', filename='images/raspbery.png') }}" alt="Frambuesa" class="img-fluid rounded">
                        <h5 class="mt-2">Frambuesa</h5>
                    </div>
                    <div class="col-md-3">
                        <img src="{{ url_for('static', filename='images/strawbery.png') }}" alt="Fresa" class="img-fluid rounded">
                        <h5 class="mt-2">Fresa</h5>
                    </div>
                </div>
                <p class="mt-4">
                    <a href="/" class="btn btn-primary my-2">Regresar</a>
                </p>
            </div>
        </section>
    </main>
</body>
</html>
Explicación de los cambios:
Organización de imágenes:

Coloca las imágenes (apple.png, blackberry.png, raspbery.png, strawbery.png) en la carpeta static/images.
Uso de Bootstrap:

Se crea una cuadrícula con row y col-md-3 para mostrar las imágenes en un formato responsivo de 4 columnas en dispositivos medianos o más grandes.
Clase img-fluid:

Hace que las imágenes sean responsivas para que se adapten al tamaño de la columna.
Encabezados para las frutas:

Cada imagen tiene un título con el nombre de la fruta.
Botón de regreso:

Un botón que redirige a la página de inicio (/).
Resultado esperado
Cuando visites /frutas, verás una cuadrícula de 4 frutas (Manzana, Mora, Frambuesa y Fresa) con imágenes bien ajustadas y títulos debajo. Además, la página tendrá un diseño atractivo gracias a Bootstrap.






Tú dijiste:
dame un css para que las imagenes queden centradas y bien distribuidas y del mismo tamaño puedes usar bootstrap
ChatGPT Plus
ChatGPT
Aquí tienes un archivo CSS adicional para que las imágenes estén centradas, tengan el mismo tamaño, y estén bien distribuidas en la cuadrícula usando clases de Bootstrap. El diseño será responsivo y se verá elegante en diferentes tamaños de pantalla.

CSS adicional
Guarda este CSS en static/css/custom.css:

css
Copiar código
.fruit-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center; /* Centrar horizontalmente */
    gap: 20px; /* Espaciado entre los elementos */
}

.fruit-card {
    text-align: center; /* Centrar texto e imágenes */
    max-width: 200px; /* Controlar el ancho máximo de cada tarjeta */
}

.fruit-card img {
    width: 150px; /* Asegurar un tamaño uniforme */
    height: 150px; /* Altura uniforme */
    object-fit: cover; /* Ajustar la imagen dentro del cuadro */
    border-radius: 10px; /* Bordes redondeados para las imágenes */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Sombra para las imágenes */
}

.fruit-card h5 {
    margin-top: 10px;
    font-size: 1.2em;
    color: #333;
}
Código actualizado para frutas.html
html
Copiar código
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mercado de Frutas</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/bootstrap.css') }}">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/custom.css') }}">
</head>
<body>
    <header>
        <div class="navbar navbar-dark bg-dark box-shadow">
            <div class="container d-flex justify-content-between">
                <a href="#" class="navbar-brand d-flex align-items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2">
                        <path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path>
                        <circle cx="12" cy="13" r="4"></circle>
                    </svg>
                    <strong>Mercado</strong>
                </a>
            </div>
        </div>
    </header>

    <main role="main">
        <section class="jumbotron text-center">
            <div class="container">
                <h1 class="jumbotron-heading">Mercado de Frutas</h1>
                <p class="lead">Aquí encontrarás imágenes de deliciosas frutas.</p>
                <div class="fruit-container">
                    <div class="fruit-card">
                        <img src="{{ url_for('static', filename='images/apple.png') }}" alt="Manzana">
                        <h5>Manzana</h5>
                    </div>
                    <div class="fruit-card">
                        <img src="{{ url_for('static', filename='images/blackberry.png') }}" alt="Mora">
                        <h5>Mora</h5>
                    </div>
                    <div class="fruit-card">
                        <img src="{{ url_for('static', filename='images/raspbery.png') }}" alt="Frambuesa">
                        <h5>Frambuesa</h5>
                    </div>
                    <div class="fruit-card">
                        <img src="{{ url_for('static', filename='images/strawbery.png') }}" alt="Fresa">
                        <h5>Fresa</h5>
                    </div>
                </div>
                <p class="mt-4">
                    <a href="/" class="btn btn-primary my-2">Regresar</a>
                </p>
            </div>
        </section>
    </main>
</body>
</html>
Cambios realizados:
Contenedor flexible:
Se usa display: flex en el contenedor principal para centrar y distribuir las tarjetas de frutas.

Tamaño uniforme de imágenes:
Las imágenes tienen un tamaño fijo (150x150px) y se ajustan con object-fit: cover.

Espaciado uniforme:
La propiedad gap asegura un espacio uniforme entre las tarjetas.

Diseño responsivo:
Las tarjetas se ajustan automáticamente al tamaño de la pantalla gracias a flex-wrap: wrap.

Sombra y bordes redondeados:
Las imágenes tienen un diseño más elegante con sombra (box-shadow) y bordes redondeados (border-radius).

Resultado esperado:
Cuando abras la página /frutas, verás las imágenes centradas, con el mismo tamaño, y bien distribuidas en la cuadrícula. El diseño será atractivo y responsivo.






Tú dijiste:
<html>
<head>
    <title>Mercado de Frutas</title>
    <link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='css/bootstrap.css') }}">
</head>
<body>

    <header>
        <div class="navbar navbar-dark bg-dark box-shadow">
          <div class="container d-flex justify-content-between">
            <a href="#" class="navbar-brand d-flex align-items-center">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2"><path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path><circle cx="12" cy="13" r="4"></circle></svg>
              <strong>Mercado</strong>
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarHeader" aria-controls="navbarHeader" aria-expanded="false" aria-label="Toggle navigation">
              <span class="navbar-toggler-icon"></span>
            </button>
          </div>
        </div>
      </header>
  
      <main role="main">
  
        <section class="jumbotron text-center">
          <div class="container">
            <h1 class="jumbotron-heading">¡Bienvenido al Mercado!</h1>
            <p class="lead text-muted">
              Bienvenido al mercado de frutas Flask, elige las frutas que más te gusten para comprarlas e ingresa tu correo para realizar el pedido.
            </p>
            <p>
              <a href="#buy" class="btn btn-primary my-2">Comprar</a>
              <a href="/frutas" class="btn btn-secondary my-2">Ver frutas</a>
            </p>
          </div>
        </section>
  
        <div class="album py-5 bg-light">
          <div class="container">
             <form action='/checkout' method='post'>
                <h4 class="mb-3" id='buy'>¿Qué te gustaría comprar en el mercado?</h4>
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th>Fruta</th>
                        <th>Cantidad</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>Fresa/Frutilla</td>
                        <td>
                            <select name='fresa'>
                                <option value='0'>0</option>
                                <option value='1'>1</option>
                                <option value='2'>2</option>
                                <option value='3'>3</option>
                                <option value='4'>4</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                      <td>Moras</td>
                      <td>
                          <select name='moras'>
                              <option value='0'>0</option>
                              <option value='1'>1</option>
                              <option value='2'>2</option>
                              <option value='3'>3</option>
                              <option value='4'>4</option>
                          </select>
                      </td>
                  </tr>
                    <tr>
                        <td>Frambuesa</td>
                        <td>
                            <select name='frambuesa'>
                                <option value='0'>0</option>
                                <option value='1'>1</option>
                                <option value='2'>2</option>
                                <option value='3'>3</option>
                                <option value='4'>4</option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td>Manzana</td>
                        <td>
                            <select name='manzana'>
                                <option value='0'>0</option>
                                <option value='1'>1</option>
                                <option value='2'>2</option>
                                <option value='3'>3</option>
                                <option value='4'>4</option>
                            </select>
                        </td>
                    </tr>
                    </tbody>
                </table>
  
                <h4 class="mb-3" id='info'>Información de la Orden</h4>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="firstName">Nombre</label>
                        <input type="text" class="form-control" name="nombre" placeholder="" value="">
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="lastName">Apellido</label>
                        <input type="text" class="form-control" name="apellido" placeholder="" value="">
                    </div>
                </div>
  
                <div class="mb-3">
                    <label for="email">E-mail <span class="text-muted">(Opcional)</span></label>
                    <input type="text" class="form-control" name="email" placeholder="tuemail@correo.com">
                </div>
              
                <hr class="mb-4">
                <button class="btn btn-primary btn-lg btn-block" type="submit">Crear Orden</button>
            </form>

            
          </div>
        </div>
  
      </main>
      
</body>
</html>   como nuestro la informacion ingresada en el formulario en este html  <html>
<head>
    <title>Mercado de Frutas</title>
    <link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='css/bootstrap.css') }}">
</head>
<body>

    <header>
        <div class="navbar navbar-dark bg-dark box-shadow">
          <div class="container d-flex justify-content-between">
            <a href="#" class="navbar-brand d-flex align-items-center">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="mr-2"><path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path><circle cx="12" cy="13" r="4"></circle></svg>
              <strong>Mercado</strong>
            </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarHeader" aria-controls="navbarHeader" aria-expanded="false" aria-label="Toggle navigation">
              <span class="navbar-toggler-icon"></span>
            </button>
          </div>
        </div>
      </header>
  
      <main role="main">
  
        <section class="jumbotron text-center">
          <div class="container">
            <h1 class="jumbotron-heading">¡Gracias por ordenar del Mercado de Frutas!</h1>
            <p class="lead text-muted">
              Creaste una orden con 5 elementos el día 9 de Abril 2024.
            </p>
          </div>
        </section>
  
        <div class="album py-5 bg-light">
          <div class="container">
                <h4 class="mb-3">Tu orden</h4>
                <table class="table table-striped">
                    <thead>
                    <tr>
                        <th>Fruta</th>
                        <th>Cantidad</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>Fresa/Frutilla</td>
                        <td>4</td>
                    </tr>
                    <tr>
                      <td>Moras</td>
                      <td>4</td>
                  </tr>
                    <tr>
                        <td>Frambuesa</td>
                        <td>3</td>
                    </tr>
                    <tr>
                        <td>Manzana</td>
                        <td>2</td>
                    </tr>
                    </tbody>
                </table>
  
                <h4 class="mb-3">Información de la Orden</h4>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        Nombre: Frida
                    </div>
                    <div class="col-md-6 mb-3">
                        Apellido: Kahlo
                    </div>
                </div>
  
                <div class="mb-3">
                    E-mail: frida@kahlo.com
                </div>
              
                <hr class="mb-4">
                <a class="btn btn-primary btn-lg btn-block" href="/">Regresar</a>
            
          </div>
        </div>
  
      </main>
      
</body>
</html>
ChatGPT Plus
ChatGPT
Para mostrar la información ingresada en el formulario en el HTML de agradecimiento, puedes seguir estos pasos:

Actualizar la ruta /checkout en el archivo Flask: Extrae los datos del formulario con request.form y pásalos al motor de plantillas para renderizar la página de agradecimiento.

Crear una nueva plantilla checkout.html: Diseña la página de agradecimiento para recibir los datos enviados desde el formulario.

Código actualizado para Flask
python
Copiar código
from flask import Flask, render_template, request

app = Flask(__name__)

@app.route('/')
def index():
    return render_template("index.html")

@app.route('/checkout', methods=['POST'])
def checkout():
    # Capturamos los datos del formulario
    order_data = {
        'fresa': int(request.form.get('fresa', 0)),
        'moras': int(request.form.get('moras', 0)),
        'frambuesa': int(request.form.get('frambuesa', 0)),
        'manzana': int(request.form.get('manzana', 0)),
        'nombre': request.form.get('nombre', ''),
        'apellido': request.form.get('apellido', ''),
        'email': request.form.get('email', ''),
    }
    # Calcular el total de elementos
    order_data['total'] = sum(order_data.values()) - len(order_data) + 1  # Resta las llaves de frutas y suma el total.

    return render_template("checkout.html", data=order_data)

@app.route('/frutas')
def fruits():
    return render_template("frutas.html")

if __name__ == "__main__":
    app.run(debug=True)
Nueva plantilla checkout.html
Guarda este código como templates/checkout.html:

html
Copiar código
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mercado de Frutas - Orden Confirmada</title>
    <link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='css/bootstrap.css') }}">
</head>
<body>

<header>
    <div class="navbar navbar-dark bg-dark box-shadow">
        <div class="container d-flex justify-content-between">
            <a href="/" class="navbar-brand d-flex align-items-center">
                <strong>Mercado de Frutas</strong>
            </a>
        </div>
    </div>
</header>

<main role="main">
    <section class="jumbotron text-center">
        <div class="container">
            <h1 class="jumbotron-heading">¡Gracias por ordenar del Mercado de Frutas!</h1>
            <p class="lead text-muted">
                Creaste una orden con {{ data['total'] }} elementos el día {{ request.date }}.
            </p>
        </div>
    </section>

    <div class="album py-5 bg-light">
        <div class="container">
            <h4 class="mb-3">Tu orden</h4>
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>Fruta</th>
                    <th>Cantidad</th>
                </tr>
                </thead>
                <tbody>
                {% for fruta, cantidad in data.items() if fruta not in ['nombre', 'apellido', 'email', 'total'] %}
                <tr>
                    <td>{{ fruta.capitalize() }}</td>
                    <td>{{ cantidad }}</td>
                </tr>
                {% endfor %}
                </tbody>
            </table>

            <h4 class="mb-3">Información de la Orden</h4>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <strong>Nombre:</strong> {{ data['nombre'] }}
                </div>
                <div class="col-md-6 mb-3">
                    <strong>Apellido:</strong> {{ data['apellido'] }}
                </div>
            </div>

            <div class="mb-3">
                <strong>E-mail:</strong> {{ data['email'] }}
            </div>

            <hr class="mb-4">
            <a class="btn btn-primary btn-lg btn-block" href="/">Regresar</a>
        </div>
    </div>
</main>

</body>
</html>
Explicación del flujo:
Ruta /checkout:

Los datos del formulario se extraen y pasan a la plantilla checkout.html como un diccionario llamado data.
Se calcula el total de elementos sumando las cantidades de frutas.
Plantilla checkout.html:

Usa un bucle {% for %} para listar las frutas y sus cantidades.
Muestra el nombre, apellido y correo proporcionados en el formulario.
Resultado:
Cuando envíes el formulario, se mostrará una página de agradecimiento con:

Los datos de las frutas y cantidades seleccionadas.
El total de elementos de la orden.
La información del cliente (nombre, apellido y correo).





Tú dijiste:
me arroja este error TypeError
TypeError: unsupported operand type(s) for +: 'int' and 'str'
ChatGPT Plus
ChatGPT
El error ocurre porque en el cálculo del total estás intentando sumar cadenas de texto (str) con enteros (int). Esto sucede porque los valores obtenidos de request.form son siempre cadenas de texto, incluso si parecen números.

Solución:
Convierte explícitamente los valores obtenidos de las frutas a enteros antes de sumarlos. Ya tienes un ejemplo con int(request.form.get('fresa', 0)). Asegúrate de que todos los valores que se suman sean convertidos a enteros.

Código corregido:
python
Copiar código
@app.route('/checkout', methods=['POST'])
def checkout():
    # Capturamos los datos del formulario y convertimos las cantidades a enteros
    order_data = {
        'fresa': int(request.form.get('fresa', 0)),
        'moras': int(request.form.get('moras', 0)),
        'frambuesa': int(request.form.get('frambuesa', 0)),
        'manzana': int(request.form.get('manzana', 0)),
        'nombre': request.form.get('nombre', ''),
        'apellido': request.form.get('apellido', ''),
        'email': request.form.get('email', ''),
    }

    # Calcular el total de elementos
    order_data['total'] = (
        order_data['fresa']
        + order_data['moras']
        + order_data['frambuesa']
        + order_data['manzana']
    )

    return render_template("checkout.html", data=order_data)
Explicación de los cambios:
Conversión a enteros: Cada valor de fruta (fresa, moras, etc.) es convertido a entero usando int().

Cálculo del total: Se asegura que solo se suman valores numéricos.

Manejo de valores faltantes: Si algún campo no existe en request.form (por ejemplo, si no seleccionaste nada), se usa el valor por defecto 0.

Verifica:
Si en el formulario no seleccionas una cantidad para alguna fruta, el valor por defecto será 0.
Asegúrate de que las claves de tu diccionario (fresa, moras, etc.) coincidan con los nombres de los campos en el formulario.





Tú dijiste:
Creaste una orden con 4 elementos el día None.  me arroja este error None
ChatGPT Plus
ChatGPT
El valor None en la fecha ocurre porque no estás proporcionando ni calculando una fecha válida para mostrar en tu plantilla. Vamos a corregir esto añadiendo el cálculo de la fecha actual en el servidor.

Solución:
Usaremos el módulo datetime para obtener la fecha actual y formatearla antes de enviarla al contexto de la plantilla.

Código corregido:
python
Copiar código
from datetime import datetime

@app.route('/checkout', methods=['POST'])
def checkout():
    # Capturamos los datos del formulario y convertimos las cantidades a enteros
    order_data = {
        'fresa': int(request.form.get('fresa', 0)),
        'moras': int(request.form.get('moras', 0)),
        'frambuesa': int(request.form.get('frambuesa', 0)),
        'manzana': int(request.form.get('manzana', 0)),
        'nombre': request.form.get('nombre', ''),
        'apellido': request.form.get('apellido', ''),
        'email': request.form.get('email', ''),
    }

    # Calcular el total de elementos
    order_data['total'] = (
        order_data['fresa']
        + order_data['moras']
        + order_data['frambuesa']
        + order_data['manzana']
    )

    # Agregar la fecha actual al contexto
    order_data['fecha'] = datetime.now().strftime('%d de %B %Y')

    return render_template("checkout.html", data=order_data)
Explicación de los cambios:
Importación de datetime:
Importamos el módulo datetime para manejar fechas y horas.

Cálculo de la fecha actual:
Usamos datetime.now().strftime('%d de %B %Y') para formatear la fecha en un formato amigable, como "18 de noviembre 2024".

Envío de la fecha a la plantilla:
La clave 'fecha' es añadida al diccionario order_data.

Modificación en la plantilla checkout.html:
En el mensaje de confirmación, asegúrate de usar el dato correctamente:

html
Copiar código
<p class="lead text-muted">
    Creaste una orden con {{ data.total }} elementos el día {{ data.fecha }}.
</p>
Resultado:
El mensaje mostrará algo como:

Creaste una orden con 4 elementos el día 18 de noviembre 2024.

Si sigues teniendo algún problema, asegúrate de que {{ data.fecha }} esté correctamente referenciado en la plantilla.






Tú dijiste:
NameError
NameError: name 'datetime' is not defined. Did you forget to import 'datetime'?  me arroja este error
ChatGPT Plus
ChatGPT
El error indica que no se ha importado el módulo datetime. Para solucionarlo, verifica que al inicio de tu archivo de código hayas añadido la siguiente línea de importación:

python
Copiar código
from datetime import datetime
Corrección completa del archivo:
Asegúrate de que la línea de importación está presente al inicio del archivo:

python
Copiar código
from flask import Flask, render_template, request
from datetime import datetime  # Asegúrate de tener esta línea
El método checkout debe quedar así:

python
Copiar código
@app.route('/checkout', methods=['POST'])
def checkout():
    # Capturamos los datos del formulario y convertimos las cantidades a enteros
    order_data = {
        'fresa': int(request.form.get('fresa', 0)),
        'moras': int(request.form.get('moras', 0)),
        'frambuesa': int(request.form.get('frambuesa', 0)),
        'manzana': int(request.form.get('manzana', 0)),
        'nombre': request.form.get('nombre', ''),
        'apellido': request.form.get('apellido', ''),
        'email': request.form.get('email', ''),
    }

    # Calcular el total de elementos
    order_data['total'] = (
        order_data['fresa']
        + order_data['moras']
        + order_data['frambuesa']
        + order_data['manzana']
    )

    # Agregar la fecha actual al contexto
    order_data['fecha'] = datetime.now().strftime('%d de %B %Y')

    return render_template("checkout.html", data=order_data)
En la plantilla checkout.html, utiliza los valores enviados correctamente:

html
Copiar código
<p class="lead text-muted">
    Cre





Tú dijiste:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mercado de Frutas - Orden Confirmada</title>
    <link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='css/bootstrap.css') }}">
</head>
<body>

<header>
    <div class="navbar navbar-dark bg-dark box-shadow">
        <div class="container d-flex justify-content-between">
            <a href="/" class="navbar-brand d-flex align-items-center">
                <strong>Mercado de Frutas</strong>
            </a>
        </div>
    </div>
</header>

<main role="main">
    <section class="jumbotron text-center">
        <div class="container">
            <h1 class="jumbotron-heading">¡Gracias por ordenar del Mercado de Frutas!</h1>
            <p class="lead text-muted">
              Creaste una orden con {{ data.total }} elementos el día {{ data.fecha }}.
            </p>
        </div>
    </section>

    <div class="album py-5 bg-light">
        <div class="container">
            <h4 class="mb-3">Tu orden</h4>
            <table class="table table-striped">
                <thead>
                <tr>
                    <th>Fruta</th>
                    <th>Cantidad</th>
                </tr>
                </thead>
                <tbody>
                {% for fruta, cantidad in data.items() if fruta not in ['nombre', 'apellido', 'email', 'total'] %}
                <tr>
                    <td>{{ fruta.capitalize() }}</td>
                    <td>{{ cantidad }}</td>
                </tr>
                {% endfor %}
                </tbody>
            </table>

            <h4 class="mb-3">Información de la Orden</h4>
            <div class="row">
                <div class="col-md-6 mb-3">
                    <strong>Nombre:</strong> {{ data['nombre'] }}
                </div>
                <div class="col-md-6 mb-3">
                    <strong>Apellido:</strong> {{ data['apellido'] }}
                </div>
            </div>

            <div class="mb-3">
                <strong>E-mail:</strong> {{ data['email'] }}
            </div>

            <hr class="mb-4">
            <a class="btn btn-primary btn-lg btn-block" href="/">Regresar</a>
        </div>
    </div>
</main>

</body>
</html>   como elimino en la parte de tu orden la fecha que queden solo los datos de las frutas  
ChatGPT Plus
ChatGPT
Para evitar que se muestre la fecha (o cualquier otro dato no relacionado con las frutas) en la sección de "Tu orden", necesitas ajustar el filtro que utilizas en el bucle for de la tabla. Actualmente estás excluyendo solo algunos elementos como 'nombre', 'apellido', 'email', 'total', pero también debes asegurarte de excluir 'fecha'.

Corrección en el archivo checkout.html
Modifica el bucle de esta forma para excluir 'fecha':

html
Copiar código
<tbody>
    {% for fruta, cantidad in data.items() if fruta not in ['nombre', 'apellido', 'email', 'total', 'fecha'] %}
    <tr>
        <td>{{ fruta.capitalize() }}</td>
        <td>{{ cantidad }}</td>
    </tr>
    {% endfor %}
</tbody>
Explicación:
Filtrado de datos innecesarios: Añadimos 'fecha' a la lista de claves que deben ser excluidas del bucle.
Mantener solo las frutas y cantidades: Ahora el bucle se asegura de mostrar solo las claves que representan las frutas.
Resultado:
La sección "Tu orden" mostrará exclusivamente los datos de las frutas y sus cantidades, sin incluir la fecha ni otros datos irrelevantes.






